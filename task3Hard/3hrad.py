# Задача 3 HARD
# Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z (Теорема Де Моргана) .
# Но теперь количество предикатов не три, а генерируется случайным образом от 5 до 25, сами значения предикатов случайные,
# проверяем это утверждение 100 раз, с помощью модуля time выводим на экран , сколько времени отработала программа.
# В конце вывести результат проверки истинности этого утверждения.

# Комментарий: насколько я понял из услвоия - нужно 100 раз сгенерировать список предикатов и проверить истиность теоремы с новыми значениями


import time
from random import randint, choice    # Импортируем необходимые модули
import os
os.system("cls")


start = time.time()
count = 0  # Переменная-счетчик, куда будем складывать итерации цикла проверки

# ----------------------------------------   ТЕЛО АЛГРОИТМА НАЧАЛО ------------------------
while count < 100:
    count += 1
    # Генерируем количество предикатов
    predCount = randint(5, 25)
    # Объявляем список, куда будем рандомно заносить значения предикатов
    sptPred = []
    # Переменная-флаг. Если теорема не сработает - будет выдаваться на какой итерации был прерван цикл проверки истиности
    trueMorgan = True

    for i in range(predCount):                      # Заполняеми массив булевыми значениями
        sptPred.append(choice([True, False]))

# Комментарий: логика алгоритма левой части теоремы Де Моргана в том, что сначала происходит коньюнкция предикатов в скобке, а потом результат изменяется not-ом.
# Итог заносим в переменную leftPart
# В правой части всё просто - изменям not-м предикаты  и получаем итоговое значение дизьюнкции в переменную rightPart

    # Присваиваем переменной leftPart значение предиката под 0 индексом(уменшьшаем итерации цикла на 1)
    leftPart = sptPred[0]
    # Присваиваем переменной rightPart not-значение предиката под 0 индексом(уменьшаем итерации цикла на 1)
    rightPart = not sptPred[0]

    i = 1
    # Проходим циклом по списку предикатов и получаем итоги левой(в скобка) и правой(полностью) части уравнения Де Моргана
    for i in range(len(sptPred)):
        leftPart = leftPart and sptPred[i]
        rightPart = rightPart or (not sptPred[i])

    # Через not получаем окончательный итог левой части теоремы
    leftPart = not leftPart
    trueMorgan = leftPart == rightPart
    print(
        f'Итоговый результат проверки теоремы Де Моргана: {trueMorgan}   Цикл {count}')
    if (trueMorgan == False):
        print(f'Проверка выявило ложность теоремы на {count} итерации')
        break
# ----------------------------------------   ТЕЛО АЛГРОИТМА КОНЕЦ ------------------------

if (trueMorgan == True):
    print(
        f"Цикл проверки прошел {count} раз и выявил что теорема Де Моргана истина")

end = time.time() - start
print()
print(f'Времени потрачено на исследование: {end}')
